
---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install Prerequisites
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude' ]

    - name: Add php7.4 stable repository from PPA and install its signing key on Ubuntu target
      ansible.builtin.apt_repository:
        repo: ppa:ondrej/php

    - name: Install LEMP Packages
      apt: name={{ item }} update_cache=yes
      # loop: [ 'nginx', 'mysql-server', 'python3-pymysql', 'php-fpm', 'php-mysql', 'unzip' ]
      loop: [ 'nginx','php7.4','php7.4-fpm','php7.4-common', 'php7.4-mysql','unzip' ]
      tags: 
        - install
    
# Nginx Configuration
    - name: Sets Nginx conf file
      template:
        src: "files/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{ http_conf }}"

    - name: Enables new site
      file:
        src: "/etc/nginx/sites-available/{{ http_conf }}"
        dest: "/etc/nginx/sites-enabled/{{ http_conf }}"
        state: link
      notify: Reload Nginx
    
    - name: Removes "default" site
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: Reload Nginx
    


    - name: "UFW - Allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp


# extract phpapp file
    - name: Extract sticky zip
      ansible.builtin.unarchive:
        src: files/sticky.zip
        dest: /var/www/html/
      tags: 
        - phpapplication

    - name: Recursively change ownership of a directory
      ansible.builtin.file:
        path: /var/www/html/sticky
        state: directory
        recurse: yes
        owner: www-data
        group: www-data

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
